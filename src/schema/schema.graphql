# import * from '../generated/prisma.graphql'

type Mutation {
  signup(email: String!, password: String!, firstName: String!, lastName: String!): User!
	signin(email: String!, password: String!): User!
	requestReset(email: String!): Message
	resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
	internalPasswordReset(oldPassword: String!, newPassword1: String!, newPassword2: String!): User!
	signout: Message

}

type Query {

}


type Instructor {
  id: ID! 
  email: String! 
  password: String!
  phone: String! 
  firstName: String!
  lastName: String!
  gender: Gender!
  address: String!
  city: String!
  state: String!
  zip: Int!
  bio: String!
  role: Role!
  imageURL: String!
  startDate: DateTime!
  currentEmployee: Boolean! default(value: true)
  clients: [Client!]!
  classes: [Class]
  lessons: [Lesson]
  # workDays: [Day] # a way to track what days of the week someone normally works? or we can make a separate type
  createdAt: DateTime! 
  updatedAt: DateTime!
}

type MedicalCondition {
  id: ID! @unique
  description: String!
  student: [Student] @relation(type: "StudentMedical")
  # instructor: [Instructor] @relation(type: "InstructorMedical")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Class {
  id: ID! @unique
  name: String!
  description: String!
  ageGroup: AgeGroup!
  level: SkillLevel!
  capacity: Int!
  price: Int!
  day: Day!
  instructor: Instructor! # can there be multiple instructors for a class?
  duration: Int! # 30 45 or 60 min
  students: [Student!]!
  time: DateTime! # may want to make this one be a string, not sure
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Lesson {
  id: ID! @unique
  name: String!
  description: String!
  instructor: Instructor! 
  duration: Int!
  calendarColor: Color!
  price: Int!
  day: Day!
  time: DateTime!
  open: Boolean!
}

type AgeGroup {
  id: ID! 
  minAge: Int!
  maxAge: Int!
  level: SkillLevel
  instructors: [Instructor!]! #assuming there are multiple instructors per age group
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Child {
  id: ID! 
  firstName: String!
  lastName: String!
  birthday: String!
  skill: SkillLevel!
  ageGroup: AgeGroup!
  classes: [Class!]!
  lessons: [Lesson!]!
  gender: Gender!
  medical: [MedicalCondition!]! # if we have generic med conditions we can use them for multiple students
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AccountAdmin { # for parents since they'll have control over payments, etc.
  id: ID! 
  email: String! 
  password: String!
  firstName: String!
  lastName: String!
  phone: String # not sure if we want for Parents or not
  address: String!
  city: String!
  state: String!
  zip: Int!
  dependants: [Child!]
  stripeId: String # if we use stripe for charges
  createdAt: DateTime!
  updatedAt: DateTime!
}